Query1: 
                                QUERY PLAN                             
-------------------------------------------------------------------
 Seq Scan on customers  (cost=3961.65..4490.81 rows=7046 width=4)
   Filter: (NOT (hashed SubPlan 1))
   SubPlan 1
     ->  Seq Scan on orders  (cost=0.00..3959.38 rows=909 width=4)
           Filter: ((status)::text = 'Paid'::text)
(5 filas)


Query2:
                                QUERY PLAN                                 
---------------------------------------------------------------------------
 HashAggregate  (cost=4537.41..4539.41 rows=200 width=4)
   Group Key: customers.customerid
   Filter: (count(*) = 1)
   ->  Append  (cost=0.00..4462.40 rows=15002 width=4)
         ->  Seq Scan on customers  (cost=0.00..493.93 rows=14093 width=4)
         ->  Seq Scan on orders  (cost=0.00..3959.38 rows=909 width=4)
               Filter: ((status)::text = 'Paid'::text)
(7 filas)


Query3:
                                   QUERY PLAN                                     
-----------------------------------------------------------------------------------
 HashSetOp Except  (cost=0.00..4640.83 rows=14093 width=8)
   ->  Append  (cost=0.00..4603.32 rows=15002 width=8)
         ->  Subquery Scan on "*SELECT* 1"  (cost=0.00..634.86 rows=14093 width=8)
               ->  Seq Scan on customers  (cost=0.00..493.93 rows=14093 width=4)
         ->  Subquery Scan on "*SELECT* 2"  (cost=0.00..3968.47 rows=909 width=8)
               ->  Seq Scan on orders  (cost=0.00..3959.38 rows=909 width=4)
                     Filter: ((status)::text = 'Paid'::text)
(7 filas)


1: La query3 es la consulta que antes empieza a a devolver resultados, lo hace nada más empezar su ejecución (como se ve en el cost=0.00..)
Esto se debe a que los resultados que no cumplen el except se van apendeando a el resultado a medida que se van obteniendo en vez de ir obteniendo 
resultados parciales y después juntarlos como hacen las otras 2 consultas, cuyos costes de la planificación más externos son mayores que 0.

2: Solo se benefician de la paralelizacion la query2 y la query3. La query3 es debido a que se pueden ejecutar ambas subqueries al mismo tiempo y
luego solo se tiene que hacer en serie el EXCEPT, como se ve en el explain tiene dos flechas al mismo nivel de subqueries, por lo tanto no depende
una de la otra. 
La query2 es debido a lo mismo, se hacen dos escaneos paralelamente y se une secuencialmente con el UNION, como se puede observar 
los escaneos estan al mismo nivel.